package py.com.ventu.app.ventas;

import java.awt.event.KeyEvent;
import static java.awt.event.KeyEvent.VK_ENTER;

import static java.awt.event.KeyEvent.VK_F12;
import static java.awt.event.KeyEvent.VK_F2;
import static java.awt.event.KeyEvent.VK_F3;
import static java.awt.event.KeyEvent.VK_F4;
import static java.awt.event.KeyEvent.VK_F5;
import static java.awt.event.KeyEvent.VK_F6;
import static java.awt.event.KeyEvent.VK_F7;
import static java.awt.event.KeyEvent.VK_F9;
import static java.awt.event.KeyEvent.VK_TAB;

import java.awt.event.KeyListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import py.com.ventu.controladores.ClientesJpaController;
import py.com.ventu.controladores.ConfiguracionesJpaController;
import py.com.ventu.controladores.FacturaVentaDetJpaController;
import py.com.ventu.controladores.FacturaVentaJpaController;
import py.com.ventu.controladores.ProductosJpaController;
import py.com.ventu.controladores.SaPendientesJpaController;
import py.com.ventu.controladores.VendedorJpaController;
import py.com.ventu.entidades.Caja;
import py.com.ventu.entidades.Cliente;
import py.com.ventu.entidades.Configuraciones;
import py.com.ventu.entidades.FacturaVenta;
import py.com.ventu.entidades.Producto;
import py.com.ventu.entidades.Usuario;
import py.com.ventu.entidades.Vendedor;
import py.com.ventu.util.NumeroUtil;

/**
 * @author cpatino
 */
public class FrmVentas extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmVentas
     */
    private EntityManager em;

    private Usuario usuario;
    private Cliente cliente;
    private Vendedor vendedor;
    private Caja caja;
    private Configuraciones conf;
    private Producto producto;

    private DefaultTableModel modelProductos;
    private DefaultTableModel modelMenu;
    
    private FacturaVentaJpaController facturaService;
    private FacturaVentaDetJpaController facturaDetSerivice;
    private ClientesJpaController clienteService;
    private VendedorJpaController vendedoresService;
    private ProductosJpaController productoService;
    //private ExistenciaSucursalJpaController existenciaService;
    private ConfiguracionesJpaController configuracionesService;
    private SaPendientesJpaController saPendientesService;
    //private SucursalesJpaController sucursalService;
    
    //para mantener un log de registro
    private Logger log;
    
    // para valores de la grilla
    private Double importeTotalVta;
    private Integer item; // nro de item en la  grilla
    private Integer tipoVenta; // 1 Credito / 2 Contado
    //private Double cantidad;
    //private Double precio;
    //private Double importe;

    private boolean swcontrol = false; // para combinacion de teclas
    
    
    public FrmVentas() {
        initComponents();
    }
    
     public FrmVentas(EntityManager ema, Usuario user, Logger logger) {
        initComponents();
        
        this.em = ema;
        this.usuario = user;
        this.log = logger;
        
        // inicializar componentes de servicio para conexion con BD
        facturaService = new FacturaVentaJpaController(em);
        facturaDetSerivice = new FacturaVentaDetJpaController(em);
        configuracionesService = new ConfiguracionesJpaController(em);
        productoService = new ProductosJpaController(em);
        vendedoresService = new VendedorJpaController(em);
        clienteService = new ClientesJpaController(em);
        //existenciaService = new ExistenciaSucursalJpaController(em);
        saPendientesService = new SaPendientesJpaController(em);
       // sucursalService = new SucursalesJpaController(em);
        
        // config. del sistema
        conf = configuracionesService.buscarConfiguraciones(1);

        if (conf != null) {
           // sucursal = sucursalService.buscarSucursales(1);
            caja = conf.getCaja();
        } else {
            JOptionPane.showMessageDialog(null, "No se han recuperado valores de configuración del sistema."
                    + "\n" + "Verifique que hayan sido configurados. (Configuración -> Configuración General).",
                    "Ventas", JOptionPane.ERROR_MESSAGE);
            log.info("Ventas " + "; Proceso: InicializarValores ; " + " ; CAUSA: " + "No se han recuperado valores de configuración del sistema.");
        }
        
        keyListener();
        //formatearCeldas();
        inicializarValores();
        
        nuevo();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtFechaHora = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCodVendedor = new javax.swing.JTextField();
        txtVendedor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtLegajo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        txtCi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        txtDepartamento = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTicket = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtTipoVenta = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCodProducto = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JFormattedTextField();
        txtPrecio = new javax.swing.JFormattedTextField();
        txtImporte = new javax.swing.JFormattedTextField();
        cmdAgregar = new javax.swing.JButton();
        cmdQuitar = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtStock = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabProductos = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabMenu = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtTotalVenta = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        cmdNuevo = new javax.swing.JButton();
        cmdGuardar = new javax.swing.JButton();
        cmdImprimir = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Ventas - KARU");
        setToolTipText("Gestionar Ventas");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Usuario");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Fecha y Hora");

        txtUsuario.setEditable(false);
        txtUsuario.setBackground(new java.awt.Color(255, 255, 255));
        txtUsuario.setFocusable(false);
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyPressed(evt);
            }
        });

        txtFechaHora.setEditable(false);
        txtFechaHora.setBackground(new java.awt.Color(255, 255, 255));
        txtFechaHora.setFocusable(false);
        txtFechaHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaHoraKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Vendedor");

        txtCodVendedor.setBackground(new java.awt.Color(255, 255, 204));
        txtCodVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodVendedorKeyPressed(evt);
            }
        });

        txtVendedor.setEditable(false);
        txtVendedor.setBackground(new java.awt.Color(255, 255, 255));
        txtVendedor.setFocusable(false);
        txtVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVendedorKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Legajo N°");

        txtLegajo.setBackground(new java.awt.Color(255, 255, 204));
        txtLegajo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLegajoFocusGained(evt);
            }
        });
        txtLegajo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLegajoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLegajoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Cliente");

        txtCliente.setEditable(false);
        txtCliente.setBackground(new java.awt.Color(255, 255, 255));
        txtCliente.setFocusable(false);

        txtCi.setEditable(false);
        txtCi.setBackground(new java.awt.Color(255, 255, 255));
        txtCi.setFocusable(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("C.I.");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Empresa");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Departamento");

        txtEmpresa.setEditable(false);
        txtEmpresa.setBackground(new java.awt.Color(255, 255, 255));
        txtEmpresa.setFocusable(false);

        txtDepartamento.setEditable(false);
        txtDepartamento.setBackground(new java.awt.Color(255, 255, 255));
        txtDepartamento.setFocusable(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Ticket N°");

        txtTicket.setEditable(false);
        txtTicket.setBackground(new java.awt.Color(204, 255, 255));
        txtTicket.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtTicket.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTicket.setFocusable(false);
        txtTicket.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTicketKeyPressed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Tipo Venta");

        txtTipoVenta.setEditable(false);
        txtTipoVenta.setBackground(new java.awt.Color(255, 255, 255));
        txtTipoVenta.setToolTipText("(F4) Venta Crédito  /  (F5) Venta Contado");
        txtTipoVenta.setFocusable(false);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 204, 51));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("KARU");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtLegajo)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCi, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFechaHora, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCodVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(txtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTipoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTipoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Producto");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Descripción");

        txtCodProducto.setBackground(new java.awt.Color(255, 255, 204));
        txtCodProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodProductoActionPerformed(evt);
            }
        });
        txtCodProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodProductoFocusGained(evt);
            }
        });
        txtCodProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodProductoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodProductoKeyPressed(evt);
            }
        });

        txtDescripcion.setEditable(false);
        txtDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        txtDescripcion.setFocusable(false);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyPressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Cantidad");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Precio");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Importe");

        txtCantidad.setBackground(new java.awt.Color(255, 255, 204));
        txtCantidad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtCantidad.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCantidad.setToolTipText("Cantidad a ser vendida");
        txtCantidad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCantidadFocusGained(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantidadKeyPressed(evt);
            }
        });

        txtPrecio.setEditable(false);
        txtPrecio.setBackground(new java.awt.Color(255, 255, 255));
        txtPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        txtPrecio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrecio.setFocusable(false);
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecioKeyPressed(evt);
            }
        });

        txtImporte.setEditable(false);
        txtImporte.setBackground(new java.awt.Color(204, 255, 204));
        txtImporte.setForeground(new java.awt.Color(0, 51, 204));
        txtImporte.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        txtImporte.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporte.setFocusable(false);
        txtImporte.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        cmdAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/com/karu/imagenes/agregar_16.png"))); // NOI18N
        cmdAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAgregarActionPerformed(evt);
            }
        });

        cmdQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/com/karu/imagenes/quitar_16.png"))); // NOI18N
        cmdQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdQuitarActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Stock");

        txtStock.setEditable(false);
        txtStock.setBackground(new java.awt.Color(255, 255, 255));
        txtStock.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtStock.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtStock.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(txtCodProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(48, 48, 48))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtImporte)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cmdAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cmdQuitar)
                        .addComponent(cmdAgregar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tabProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Código", "Descripción", "Cantidad", "Precio", "Subtotal", "producto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabProductos.setFocusable(false);
        tabProductos.setRowHeight(20);
        tabProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabProductosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabProductos);
        if (tabProductos.getColumnModel().getColumnCount() > 0) {
            tabProductos.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tabMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Descripción", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabMenu.setFocusable(false);
        tabMenu.setRowHeight(20);
        tabMenu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabMenuKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabMenu);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Total Venta");
        jLabel15.setToolTipText("");

        txtTotalVenta.setEditable(false);
        txtTotalVenta.setBackground(new java.awt.Color(153, 255, 255));
        txtTotalVenta.setForeground(new java.awt.Color(204, 0, 0));
        txtTotalVenta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        txtTotalVenta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalVenta.setToolTipText("Importe Total de la Venta a Pagar");
        txtTotalVenta.setFocusable(false);
        txtTotalVenta.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        cmdNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/com/karu/imagenes/nuevo_24.png"))); // NOI18N
        cmdNuevo.setText("Nuevo");
        cmdNuevo.setToolTipText("Nueva Venta (F2)");
        cmdNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNuevoActionPerformed(evt);
            }
        });

        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/com/karu/imagenes/guardar_24.png"))); // NOI18N
        cmdGuardar.setText("Guardar");
        cmdGuardar.setToolTipText("Guardar Venta (F3)");

        cmdImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/com/karu/imagenes/imprimir_24.png"))); // NOI18N
        cmdImprimir.setText("Imprimir");
        cmdImprimir.setToolTipText("Imprimir Ticket (F12)");

        cmdCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/com/karu/imagenes/cancelar_24.png"))); // NOI18N
        cmdCancelar.setText("Cancelar");
        cmdCancelar.setToolTipText("Cancelar Venta (F7)");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCancelar)
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmdNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
            .addComponent(cmdGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cmdImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cmdCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTotalVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalVenta)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCantidadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCantidadFocusGained
        this.txtCantidad.selectAll();
    }//GEN-LAST:event_txtCantidadFocusGained

    private void txtLegajoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLegajoFocusGained
        this.txtLegajo.selectAll();
    }//GEN-LAST:event_txtLegajoFocusGained

    private void txtCodProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodProductoFocusGained
        this.txtCodProducto.selectAll();
    }//GEN-LAST:event_txtCodProductoFocusGained

    private void txtCodProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodProductoKeyTyped
        char car = evt.getKeyChar();

        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodProductoKeyTyped

    private void txtLegajoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLegajoKeyTyped
        char car = evt.getKeyChar();

        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtLegajoKeyTyped

    private void txtUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyPressed
         procesarKeyEvent(evt);
    }//GEN-LAST:event_txtUsuarioKeyPressed

    private void txtFechaHoraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaHoraKeyPressed
        procesarKeyEvent(evt);
    }//GEN-LAST:event_txtFechaHoraKeyPressed

    private void txtCodVendedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodVendedorKeyPressed
        if (evt.getKeyCode() == VK_ENTER || evt.getKeyCode() == VK_F9) {
            buscarVendedor();
        } else {
            procesarKeyEvent(evt);
        }
    }//GEN-LAST:event_txtCodVendedorKeyPressed

    private void txtVendedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVendedorKeyPressed
        procesarKeyEvent(evt);
    }//GEN-LAST:event_txtVendedorKeyPressed

    private void txtTicketKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTicketKeyPressed
        procesarKeyEvent(evt);
    }//GEN-LAST:event_txtTicketKeyPressed

    private void txtCodProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodProductoKeyPressed
       if (evt.getKeyCode() == VK_ENTER || evt.getKeyCode() == VK_F9) {
            buscarProducto();
        } else {
            procesarKeyEvent(evt);
        }
    }//GEN-LAST:event_txtCodProductoKeyPressed

    private void txtDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyPressed
         procesarKeyEvent(evt);
    }//GEN-LAST:event_txtDescripcionKeyPressed

    private void txtCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyPressed
        if (evt.getKeyCode() == VK_ENTER) {

            Double cantidad = Double.parseDouble(this.txtCantidad.getValue().toString());
            Double precio = producto.getPrecioVenta();
            Double importe = cantidad * precio;

            this.txtPrecio.setValue(producto.getPrecioVenta());
            this.txtImporte.setValue(NumeroUtil.redondear(importe, 2));
            
            this.txtPrecio.requestFocus();
        } else {
            procesarKeyEvent(evt);
        }
    }//GEN-LAST:event_txtCantidadKeyPressed

    private void tabProductosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabProductosKeyPressed
         procesarKeyEvent(evt);
    }//GEN-LAST:event_tabProductosKeyPressed

    private void tabMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabMenuKeyPressed
        procesarKeyEvent(evt);
    }//GEN-LAST:event_tabMenuKeyPressed

    private void txtLegajoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLegajoKeyPressed
        if (evt.getKeyCode() == VK_ENTER || evt.getKeyCode() == VK_F9) {
            buscarCliente();
        } else {
            procesarKeyEvent(evt);
        }
    }//GEN-LAST:event_txtLegajoKeyPressed

    private void txtCodProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodProductoActionPerformed

    private void txtPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyPressed
        if (evt.getKeyCode() == VK_ENTER || evt.getKeyCode() == VK_TAB) {
            cargarGrilla();
            limpiarCamposProducto();
        } else {
            procesarKeyEvent(evt);
        }
    }//GEN-LAST:event_txtPrecioKeyPressed

    private void cmdNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNuevoActionPerformed
        nuevo();
    }//GEN-LAST:event_cmdNuevoActionPerformed

    private void cmdAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAgregarActionPerformed
        if (producto != null) {
            if (new Double(this.txtCantidad.getValue().toString()) > 0) {
                cargarGrilla();
                limpiarCamposProducto();
            } else {
                JOptionPane.showMessageDialog(null, "Debe ingresar una cantidad mayor a 0 para vender.",
                        "Ventas", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_cmdAgregarActionPerformed

    private void cmdQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdQuitarActionPerformed
        int selectedRow = tabProductos.getSelectedRow();
        quitarElemento(selectedRow);
        calcularTotales();
    }//GEN-LAST:event_cmdQuitarActionPerformed

    // para atrapar keypress de teclas de funcion
    public void keyListener() {
        KeyListener listener = new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {
                procesarKeyEvent(e);
            }

            @Override
            public void keyReleased(KeyEvent e) {
            }
        };
        addKeyListener(listener);
        setFocusable(true);
    }

    public void procesarKeyEvent(KeyEvent evt) {

        ///// Teclas de Funcion para atajos a acciones ///
        
        // F2 - Nueva Venta
        if (evt.getKeyCode() == VK_F2) {
            nuevo();
        }

        // F3 - Guardar Venta
        if (evt.getKeyCode() == VK_F3) {
          
        }
        
        // F4 - Venta Credito
        if (evt.getKeyCode() == VK_F4) {
          tipoVenta = 1;
          actualizarTipoVenta();
        }

        // F5 - venta Contado
        if (evt.getKeyCode() == VK_F5) {
           tipoVenta = 2;
           actualizarTipoVenta();
        }

        // F6 - venta tarjeta
        if (evt.getKeyCode() == VK_F6) {
            //this.formaPago = 1;
            //this.condicionVenta = 3;
            //this.lblFormaPago.setText("Venta Tarjeta");
            //this.fechaVto = null;
            ///this.lblVto.setVisible(false);
            //cantCuotas = 1;
            //enCuotas = false;

           /* FrmVentaTarjeta vt = new FrmVentaTarjeta(this, tarjetasService.listarTarjetas());
            vt.setVisible(true);*/
        }

        // F7 - Cancelar
        if (evt.getKeyCode() == VK_F7) {
            //this.formaPago = 1;
            //this.condicionVenta = 2;
//            tarjeta = null;
            //this.lblFormaPago.setText("Venta Crédito");
            //this.fechaVto = new Date();

            //FrmAsignarVto av = new FrmAsignarVto(this);
            //av.setVisible(true);
            //this.lblVto.setVisible(true);
            //cantCuotas = 1;
            //enCuotas = false;
        }

        // F8 - venta diferida (cuotas)
       /* if (cliente.getCantCuotas() > 0) {
         if (evt.getKeyCode() == VK_F8) {
         this.formaPago = 1;
         this.condicionVenta = 2;
         tarjeta = null;
         this.lblFormaPago.setText("Venta Cuotas");
         cantCuotas = 1;
         enCuotas = true;
                
         //levantar ventana de generador de cuotas
                
         }
         } else {
         JOptionPane.showMessageDialog(null, "El cliente no puede realizar compras en cuotas",
         "Ventas", JOptionPane.WARNING_MESSAGE);
         }*/
        // F9 - buscar producto
        if (evt.getKeyCode() == VK_F9) {
           // this.txtBusqueda.requestFocus();
        }

        // F12 - Imprimir ticket
        if (evt.getKeyCode() == VK_F12) {
           // procesar();
        }

        // Para manejo de combinacion de teclas para acceso a componentes del formulario.
        if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            swcontrol = true;
        } else {
            // buscar Cliente
            if (swcontrol && evt.getKeyCode() == KeyEvent.VK_C) {
               // buscarCliente();
                swcontrol = false;
            } else {
                if (swcontrol && evt.getKeyCode() == KeyEvent.VK_V) {
                    //buscarVendedor();
                    swcontrol = false;
                }
            }
        }
    }
    
    private void inicializarValores() {
        
        item = 0;
        importeTotalVta = 0.0;
        importeTotalVta = 0.0;
        tipoVenta = 1;
        
        this.txtUsuario.setText(usuario.getUsername());
        this.txtFechaHora.setText(new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date()));
        this.txtTicket.setText(facturaService.valorActual().toString());

        this.txtCodVendedor.setText("");
        this.txtVendedor.setText("");
        this.txtLegajo.setText("");
        this.txtCliente.setText("");
        this.txtCi.setText("");
        this.txtEmpresa.setText("");
        this.txtDepartamento.setText("");
        
        this.txtCodProducto.setText("");
        this.txtDescripcion.setText("");
        this.txtCantidad.setText("");
        this.txtPrecio.setText("");
        this.txtImporte.setText("");
        
        this.txtCantidad.setValue(0);
        this.txtPrecio.setValue(0);
        this.txtImporte.setValue(0);
        this.txtTotalVenta.setValue(0);
        
        cliente = null;

        actualizarTipoVenta();
        tableModelProductos();
        tableModelMenu();
        
        cargarListaMenu();
    }

    private void limpiarCamposProducto() {
        this.txtCodProducto.setText("");
        this.txtDescripcion.setText("");
        this.txtCantidad.setValue(0);
        this.txtPrecio.setValue(0);
        this.txtStock.setValue(0);
        this.txtImporte.setValue(0);
    }
    
    private void tableModelProductos() {
        modelProductos = (DefaultTableModel) this.tabProductos.getModel();
        modelProductos.setNumRows(0);

        tabProductos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tabProductos.getColumnModel().getColumn(1).setPreferredWidth(60);
        tabProductos.getColumnModel().getColumn(2).setPreferredWidth(200);
        tabProductos.getColumnModel().getColumn(3).setPreferredWidth(60);
        tabProductos.getColumnModel().getColumn(4).setPreferredWidth(60);
        tabProductos.getColumnModel().getColumn(5).setPreferredWidth(60);
        
                // oculta columna existencia
        tabProductos.getColumnModel().getColumn(6).setMaxWidth(0);
        tabProductos.getColumnModel().getColumn(6).setMinWidth(0);
        tabProductos.getColumnModel().getColumn(6).setPreferredWidth(0);
       
    }

    private void tableModelMenu() {
        modelMenu = (DefaultTableModel) this.tabMenu.getModel();
        modelMenu.setNumRows(0);

        tabMenu.getColumnModel().getColumn(0).setMaxWidth(60);
        tabMenu.getColumnModel().getColumn(1).setMinWidth(120);
        tabMenu.getColumnModel().getColumn(2).setPreferredWidth(60);
    }
    
    private void nuevo(){
        inicializarValores();
        this.txtLegajo.requestFocus();
    }
    
    private void cargarListaMenu(){
        try {
            for(Producto prod : productoService.listarProductos()){
                modelMenu.addRow(new Object[]{
                prod.getId(), // codigo
                prod.getDescripcion()}); // descripcion
                //es.getStockActual()}); // stock actual
            }
            

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al agregar producto en la grilla de productos del menú."
                    + "\n" + ex.getMessage(), "Ventas", JOptionPane.ERROR_MESSAGE);
            log.info("Ventas" + "; Proceso: CargarGrilla ; " + ex.getMessage() + 
                    " ; CAUSA: " + ex.getCause());
            ex.printStackTrace();
        }
    }
    
    private void actualizarTipoVenta() {
        if (tipoVenta == 1) {
            this.txtTipoVenta.setText("Crédito");
        } else {
            this.txtTipoVenta.setText("Contado");
        }
    }
    
    private void buscarVendedor(){
        try{
            if(!this.txtCodVendedor.getText().trim().isEmpty()){
                vendedor = vendedoresService.buscarVendedores(Integer.parseInt(this.txtCodVendedor.getText()));
                
                if(vendedor != null){
                    this.txtVendedor.setText(vendedor.getNombre());
                } else {
                    this.txtVendedor.setText("");
                }
                
            } else {
                 JOptionPane.showMessageDialog(null, "Debe ingresar el código del vendedor.",
                    "Ventas", JOptionPane.ERROR_MESSAGE);
                this.txtCodVendedor.requestFocus();
                this.txtCodVendedor.selectAll();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Vendedor buscado no existe. Verifique código ingresado.",
                "Ventas", JOptionPane.ERROR_MESSAGE);
            this.txtCodVendedor.requestFocus();
            this.txtCodVendedor.selectAll();
        }
    }
    
    private void buscarCliente(){
        try{
            if(!this.txtLegajo.getText().trim().isEmpty()){
                cliente = clienteService.buscarPorLegajo(Integer.parseInt(this.txtLegajo.getText()));
                
                if(cliente != null){
                    this.txtCliente.setText(cliente.getNombre());
                    this.txtCi.setText(cliente.getCi());
                    //this.txtEmpresa.setText(cliente.getEmpresa().getDescripcion());
                    //this.txtDepartamento.setText(cliente.getDepartamento().getDescripcion());
                } else {
                    this.txtCliente.setText("");
                    this.txtCi.setText("");
                    this.txtEmpresa.setText("");
                    this.txtDepartamento.setText("");
                }
                
            } else {
                 JOptionPane.showMessageDialog(null, "Debe ingresar el código del cliente.",
                    "Ventas", JOptionPane.ERROR_MESSAGE);
                this.txtLegajo.requestFocus();
                this.txtLegajo.selectAll();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Cliente buscado no existe. Verifique el nro. de legajo ingresado.",
                "Ventas", JOptionPane.ERROR_MESSAGE);
            this.txtLegajo.requestFocus();
            this.txtLegajo.selectAll();
        }
    }
    
    private void buscarProducto(){
        try{
            if(!this.txtCodProducto.getText().trim().isEmpty()){
                producto = productoService.buscarProductos(Integer.parseInt(this.txtCodProducto.getText()));
                
                if(producto != null){
                    
                    //existencia = existenciaService.buscarExistenciaStock(producto, 1);
                    
                    this.txtDescripcion.setText(producto.getDescripcion());
                    this.txtPrecio.setValue(producto.getPrecioVenta());
                    //this.txtStock.setValue(existencia.getStockActual());
                    this.txtImporte.setValue(0);
                } else {
                    this.txtDescripcion.setText("");
                    this.txtPrecio.setValue(0);
                    this.txtStock.setValue(0);
                    this.txtImporte.setValue(0);
                }
                
            } else {
                 JOptionPane.showMessageDialog(null, "Debe ingresar el código del producto.",
                    "Ventas", JOptionPane.ERROR_MESSAGE);
                this.txtCodProducto.requestFocus();
                this.txtCodProducto.selectAll();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Producto buscado no existe. Verifique el código ingresado.",
                "Ventas", JOptionPane.ERROR_MESSAGE);
            this.txtCodProducto.requestFocus();
            this.txtCodProducto.selectAll();
        }
    }
    
    private void cargarGrilla() {
        try {

            Double cantidad = Double.parseDouble(this.txtCantidad.getValue().toString());
            Double precio = producto.getPrecioVenta();
            Double importe = cantidad * precio;
            
            modelProductos.addRow(new Object[]{
                item++,
                producto.getId(), // codigo
                producto.getDescripcion(), // descripcion
                cantidad, // cantidad vendida
                producto.getPrecioVenta(), // precio de venta
                importe, // subtotal de importe  
                producto
            });
            
            calcularTotales();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al cargar productos a la grilla. Intente de nuevo.",
                    "Ventas", JOptionPane.ERROR_MESSAGE);
            this.txtCodProducto.requestFocus();
            this.txtCodProducto.selectAll();
        }
    }
    
    /**
     * Quita el elemento seleccionado de la grilla.
     **/
    private void quitarElemento(int filaSel) {
        try {
            if (filaSel < 0) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un registro para eliminar.",
                        "Ventas", JOptionPane.ERROR_MESSAGE);
            } else {
                modelProductos.removeRow(filaSel);
                this.txtCodProducto.grabFocus();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al quitar producto de la lista. "
                    + e.getMessage(), "Ventas", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void calcularTotales() {
        Double totalGral = 0.0;
        Double importe = 0.0;

        int cantArt = modelProductos.getRowCount();

        try {
            if (cantArt > 0) {
                for (int i = 0; i < cantArt; i++) {
                    importe = Double.parseDouble(modelProductos.getValueAt(i, 5).toString());
                    totalGral = totalGral + importe;
                }
            }

            importeTotalVta = totalGral;
            this.txtTotalVenta.setValue(importeTotalVta);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al actualizar totales."
                    + "\n" + e.getMessage(), "Ventas", JOptionPane.ERROR_MESSAGE);
            log.info("Ventas" + "; Proceso: ActualizarTotales ; " + e.getMessage() + " ; CAUSA: " + e.getCause());
            e.printStackTrace();
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAgregar;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdImprimir;
    private javax.swing.JButton cmdNuevo;
    private javax.swing.JButton cmdQuitar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabMenu;
    private javax.swing.JTable tabProductos;
    private javax.swing.JFormattedTextField txtCantidad;
    private javax.swing.JTextField txtCi;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodProducto;
    private javax.swing.JTextField txtCodVendedor;
    private javax.swing.JTextField txtDepartamento;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JFormattedTextField txtFechaHora;
    private javax.swing.JFormattedTextField txtImporte;
    private javax.swing.JTextField txtLegajo;
    private javax.swing.JFormattedTextField txtPrecio;
    private javax.swing.JFormattedTextField txtStock;
    private javax.swing.JTextField txtTicket;
    private javax.swing.JTextField txtTipoVenta;
    private javax.swing.JFormattedTextField txtTotalVenta;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txtVendedor;
    // End of variables declaration//GEN-END:variables
}
